class test extends uvm_test;

	`uvm_component_utils(test)

	env env_h;
	env_config env_cfgh;
	src_config src_cfgh;
	dst_config dst_cfgh;

	function new(string name="test",uvm_component parent);
	super.new(name,parent);
	endfunction

	function void build_phase(uvm_phase phase);
		env_cfgh=env_config::type_id::create("env_cfgh");
		
		src_cfgh=src_config::type_id::create("src_cfgh");
			if(!uvm_config_db#(virtual count_if)::get(this,"","src_if",src_cfgh.vif))
				`uvm_fatal("FATAL","cannot get config")
		
		dst_cfgh=dst_config::type_id::create("dst_cfgh");
			if(!uvm_config_db#(virtual count_if)::get(this,"","dst_if",dst_cfgh.vif))
				`uvm_fatal("FATAL","cannot get config")
		
	env_cfgh.src_cfg=src_cfgh;
	env_cfgh.dst_cfg=dst_cfgh;

	uvm_config_db#(env_config)::set(this,"*","env_config",env_cfgh);
	env_h=env::type_id::create("env_h",this);
	endfunction

	function void end_of_elaboration_phase(uvm_phase phase);
	uvm_top.print_topology();
	endfunction  
endclass

class test_one extends test;

	`uvm_component_utils(test_one)
	//seq_one seq1h;
	v_seqs_one v_seq1h;

function new(string name="test_one",uvm_component parent);
	super.new(name,parent);
endfunction

task run_phase(uvm_phase phase);
	v_seq1h=v_seqs_one::type_id::create("v_seq1h");
	phase.raise_objection(this);
	v_seq1h.start(env_h.v_seqrh);
	#100;
	phase.drop_objection(this);
endtask

endclass

class test_two extends test;

	`uvm_component_utils(test_two)
	//seq_two seq2h;
	v_seqs_two v_seq2h;

function new(string name="test_two",uvm_component parent);
	super.new(name,parent);
endfunction

task run_phase(uvm_phase phase);
	v_seq2h=v_seqs_two::type_id::create("v_seq2h");
	phase.raise_objection(this);
	v_seq2h.start(env_h.v_seqrh);
	#100;
	phase.drop_objection(this);
endtask

endclass
 